---
# tasks file for ansible-nexus
- name: Download nexus_package
  get_url:
    url: "http://download.sonatype.com/nexus/oss/{{ nexus_package }}"
    dest: "{{ nexus_download_dir }}/{{ nexus_package }}"
  tags: download

- name: Ensure Nexus o/s group exists
  group:
    name: "{{ nexus_os_group }}"
    state: present
  when: nexus_create_os_group

- name: Ensure Nexus o/s user exists
  user:
    name: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    shell: "{{ nexus_os_user_shell }}"
    state: present
  when: nexus_create_os_user

- name: Ensure Nexus installation directory exists
  file:
    path="{{ nexus_installation_dir }}"
    state="directory"

- include: service.yml

- name: Unpack Nexus download
  unarchive:
    src: "{{ nexus_download_dir }}/{{ nexus_package }}"
    dest: "{{ nexus_installation_dir }}"
    creates: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}"
    force: no
    copy: no
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: 0755
  tags: unpack
  notify: restart nexus

- name: Update symlink nexus-latest
  file:
    state: link
    src: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}"
    dest: "{{ nexus_installation_dir }}/nexus-latest"

- name: Install createrepo for nexus-yum-repository-plugin
  yum:
    name: createrepo
    state: installed
  when: ansible_os_family == "RedHat"

- name: Check if sonatype working directory exists
  stat:
    path: "{{ nexus_installation_dir }}/sonatype-work"
  register: s_w

- name: Move existing sonatype working directory into specified working dir
  command: mv "{{ nexus_installation_dir }}/sonatype-work" "{{ nexus_working_dir }}"
  when: s_w.stat.exists

- name: Set permissions and ownership on Nexus installation directory
  file:
    path: "{{ nexus_installation_dir }}/{{ nexus_package }}"
    state: "directory"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: 0755
    recurse: yes

- name: Set permissions and ownership on Nexus work directory
  file:
    path: "{{ nexus_working_dir }}"
    state: "directory"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: "0755"
    recurse: true

- name: Set permissions and ownership on Nexus logs directory
  file:
    path: "{{ nexus_installation_dir }}/nexus-latest/logs"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    state: directory

- name: Set permissions and ownership on Nexus tmp directory
  file:
    path: "{{ nexus_installation_dir }}/nexus-latest/tmp"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    state: directory

- name: Set permissions and ownership on Nexus pid directory
  file:
    path: /var/run/nexus
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    state: directory

- name: Configure port in nexus.properties
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}/conf/nexus.properties"
    line: "application-port={{ nexus_port }}"
    regexp: "application-port=.*"
    state: present
  notify: restart nexus

- name: Configure workdir in nexus.properties
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}/conf/nexus.properties"
    line: "nexus-work={{ nexus_working_dir }}"
    regexp: "nexus-work=.*"
    state: present
  notify: restart nexus

- name: ensure nexus is started
  service:
    name: nexus
    state: started
    enabled: yes
